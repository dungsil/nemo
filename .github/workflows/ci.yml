name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'gradle/**'
      - '**/*.gradle.kts'
      - '**/*.versions.toml'
      - 'gradle.properties'
  pull_request:
    paths:
      - 'src/**'
      - 'gradle/**'
      - '**/*.gradle.kts'
      - '**/*.versions.toml'
      - 'gradle.properties'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup OpenJDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x check
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-cache-${{ github.sha }}
          path: build/
          retention-days: 1 # 하루만 보관
  test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup OpenJDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-cache-${{ github.sha }}
          path: build/
      - name: Run unit tests
        run: |
          chmod +x ./gradlew
          ./gradlew test
      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: build/test-results/test/
          files: TEST-*.xml
  coverage-reports:
    name: Upload coverage reports with Codecov
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup OpenJDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Generate coverage reports
        run: |
          chmod +x ./gradlew
          ./gradlew koverXmlReport
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: dungsil/nemo
  publish-kdoc:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Publish documentation
    runs-on: ubuntu-latest
    needs: [ test ]
    concurrency:
      group: documentation
      cancel-in-progress: true
    permissions:
      id-token: write
      pages: write
      contents: read
    environment:
      name: documentation
      url: ${{ steps.deployment.outputs.url }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup OpenJDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Generate documentation
        run: |
          chmod +x ./gradlew
          ./gradlew dokkaGenerate
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
      - name: Upload Github Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/dokka/html/'
      - id: deployment
        name: Deploy to GitHub pages
        uses: actions/deploy-pages@v4
